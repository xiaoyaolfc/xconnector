version: '3.8'

services:
  # XConnector 服务 - 使用你的本地镜像
  xconnector-service:
    image: xconnector-service:latest
    container_name: xconnector-service
    environment:
      - XCONNECTOR_PORT=8081
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
    networks:
      - xconnector-net
    ports:
      - "8081:8081"
    volumes:
      - xconnector-logs:/app/logs
      - xconnector-configs:/app/configs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # etcd - 使用你的 bitnami 镜像
  etcd:
    image: bitnami/etcd:auth-online
    container_name: etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd:2380
      - ETCD_INITIAL_CLUSTER=etcd=http://etcd:2380
      - ETCD_NAME=etcd
      - ETCD_ROOT_PASSWORD=  # 空密码，允许无认证访问
    networks:
      - xconnector-net
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - etcd-data:/bitnami/etcd/data
    restart: unless-stopped

  # NATS - 使用轻量级的 alpine 镜像
  nats:
    image: nats:latest
    container_name: nats
    networks:
      - xconnector-net
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js", "-m", "8222"]
    restart: unless-stopped

  # Dynamo Worker - 使用你的本地镜像
  dynamo-worker:
    image: dynamo-nvidia:v0.3.0-vllm0.8.4-lmcache0.2.1-inline
    container_name: dynamo-worker
    environment:
      # XConnector 配置
      - ENABLE_XCONNECTOR=true
      - XCONNECTOR_SERVICE_URL=http://xconnector-service:8081
      - XCONNECTOR_FAIL_ON_ERROR=false

      # Dynamo 环境配置
      - ETCD_HOST=etcd
      - ETCD_PORT=2379
      - NATS_URL=nats://nats:4222

      # Python 路径配置
      - PYTHONPATH=/workspace:/opt/dynamo/examples/llm:/workspace/xconnector-integration:$PYTHONPATH
      - PATH=/opt/dynamo/venv/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/bin:/usr/bin:/bin

      # 调试配置
      - LOG_LEVEL=DEBUG
    networks:
      - xconnector-net
    ports:
      - "8000:8000"  # Dynamo frontend
      - "8001:8001"  # 额外端口，如果需要的话
    volumes:
      - dynamo-logs:/workspace/logs
      - model-cache:/workspace/models
      - ./configs:/workspace/configs:ro
      - ./xconnector-integration:/workspace/xconnector-integration:ro

    # GPU 支持
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

    # 健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health", "||", "exit", "1"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s

    restart: unless-stopped

    # 设置工作目录
    working_dir: /opt/dynamo/examples/llm

    # 启动命令 - 等待 XConnector 服务启动后再启动 Dynamo
    command: [
      "bash", "-c",
      "echo 'Waiting for XConnector service...' && 
       while ! curl -f http://xconnector-service:8081/health; do sleep 5; done && 
       echo 'XConnector service is ready' && 
       python /workspace/xconnector-integration/startup_wrapper.py && 
       /opt/dynamo/venv/bin/dynamo serve graphs.disagg:Frontend -f /workspace/configs/disagg_with_xconnector.yaml"
    ]

    depends_on:
      xconnector-service:
        condition: service_healthy
      etcd:
        condition: service_started
      nats:
        condition: service_started

networks:
  xconnector-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  etcd-data:
  xconnector-logs:
  xconnector-configs:
  dynamo-logs:
  model-cache: