version: '3.8'

services:
  # XConnector 服务 - 使用从本地上传的镜像
  xconnector-service:
    image: xconnector-service:latest
    container_name: xconnector-service
    environment:
      - ETCD_HOST=etcd
      - ETCD_PORT=2379
      - NATS_URL=nats://nats:4222
      - XCONNECTOR_PORT=8081
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
    networks:
      - xconnector-net
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - xconnector-logs:/app/logs
      # 挂载 XConnector 配置文件
      - ../../integrations/dynamo/configs/xconnector_config.yaml:/app/configs/xconnector_config.yaml:ro
    restart: unless-stopped
    depends_on:
      etcd:
        condition: service_healthy
      nats:
        condition: service_started

  # etcd - 使用离线服务器现有的镜像
  etcd:
    image: bitnami/etcd:auth-online
    container_name: etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd:2380
      - ETCD_INITIAL_CLUSTER=etcd=http://etcd:2380
      - ETCD_NAME=etcd
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
      - ETCD_INITIAL_CLUSTER_STATE=new
    networks:
      - xconnector-net
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - etcd-data:/bitnami/etcd/data
    healthcheck:
      test: ["CMD", "etcdctl", "--endpoints=http://localhost:2379", "endpoint", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  # NATS - 使用离线服务器现有的镜像
  nats:
    image: nats:latest
    container_name: nats
    networks:
      - xconnector-net
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js", "-m", "8222"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Dynamo Worker - 使用离线服务器现有的镜像
  dynamo-worker:
    image: dynamo-nvidia:v0.3.0-vllm0.8.4-lmcache0.2.1-inline
    container_name: dynamo-worker
    environment:
      # XConnector 集成配置
      - ENABLE_XCONNECTOR=true
      - XCONNECTOR_SERVICE_URL=http://xconnector-service:8081
      - XCONNECTOR_FAIL_ON_ERROR=false

      # Dynamo 基础配置
      - ETCD_HOST=etcd
      - ETCD_PORT=2379
      - NATS_URL=nats://nats:4222

      # Python 路径配置
      - PYTHONPATH=/workspace:/opt/dynamo/examples/llm:/workspace/xconnector-integration:$PYTHONPATH
      - PATH=/opt/dynamo/venv/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/bin:/usr/bin:/bin

      # 日志级别
      - LOG_LEVEL=INFO
    networks:
      - xconnector-net
    ports:
      - "8000:8000"
    volumes:
      # 挂载 Dynamo 配置文件
      - ../../integrations/dynamo/configs/disagg_with_xconnector.yaml:/workspace/configs/disagg.yaml:ro

      # 挂载启动包装脚本
      - ../../integrations/dynamo/startup-wrapper.py:/workspace/startup-wrapper.py:ro

      # 挂载扩展加载器
      - ../../integrations/dynamo/extension_loader.py:/workspace/xconnector-integration/extension_loader.py:ro

      # 挂载注册表文件
      - ../../integrations/dynamo/registry.py:/workspace/xconnector-integration/registry.py:ro

      # 创建 __init__.py 让 Python 识别为包
      - ../../integrations/dynamo/__init__.py:/workspace/xconnector-integration/__init__.py:ro

      # 持久化存储
      - dynamo-logs:/workspace/logs
      - model-cache:/workspace/models

    # GPU 支持
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

    # 健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health", "||", "exit", "1"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s

    # 工作目录
    working_dir: /opt/dynamo/examples/llm

    # 启动命令 - 先运行集成脚本，再启动 Dynamo
    command: [
      "bash", "-c",
      "echo 'Waiting for XConnector service...' && 
       while ! curl -f http://xconnector-service:8081/health; do sleep 5; done && 
       echo 'XConnector service is ready' && 
       echo 'Setting up XConnector integration...' &&
       python /workspace/startup-wrapper.py && 
       echo 'Starting Dynamo with XConnector integration...' &&
       /opt/dynamo/venv/bin/dynamo serve graphs.disagg:Frontend -f /workspace/configs/disagg.yaml"
    ]

    restart: unless-stopped
    depends_on:
      xconnector-service:
        condition: service_healthy
      etcd:
        condition: service_healthy
      nats:
        condition: service_started

networks:
  xconnector-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  etcd-data:
    driver: local
  xconnector-logs:
    driver: local
  dynamo-logs:
    driver: local
  model-cache:
    driver: local